# todo:

- dispose zdo members on zdo erase
    owner map
    member map
    ...
    
    maybe store this in zdo destructor
    to keep vars private
    
    remove access for ZDOManager (eliminate friend specifier)

- use zdo as key/hash in set<>
    - use less memory
        not only avoidance of dual id,
        but zdo can now directly contain ID
        
        and not be separately contained in a wrapper class

- by using the zdo itself as the key/hash

- alternative for storing zdos in map
    use set not map
    
    zdo will contain id again
    
    id will be the key

- if vector axis' are different from each other, then scale, else scale_scalar
    determining equality without comparing
    
- consider removing owner bits from pack
    most zdos will remain unowned
    
- batched owning
    most zdos within a zone will be owned by a specific peer, 
    
    exceptions are made for individual RequestOwn() znetview rpc methods, like 
        container open, 
        any case where ownership is transferred
        
        determining batched ownership is simple, assume all zdoss in region are owned by specific predefined peer, queried by ZoneID
        
    every time a peer disconnects, all zdos are iterated
        why
        
        would be better to iterate all owned zdos from ZDO_OWNERS
        
        

- severe latency
    debug mode?
    
    zdos also do not appear to get destroyed on other clients

- how to disable tracy profiler
    it takes up memory constantly until out of memory

- implement new random event system
    RPC_ConsoleStartRandomEvent
    
    ResetRandomEvent too
    
    player event data
    
- rotations during world generation is screwed up
    trees are upside down

- change login defaults
    - disable password
    - enable whitelist
    
    the password mechanic is dumb, at least offline MC servers understand this; having password + 2fa auth like email at the least

- implement dungeon randomSpawns functionality

- dump starting keys
    remove uneeded members
    use bitpack / masks for bool-like

- dump dungeon randomSpawns

- optimize dumped .pkg

- free unused heightmaps
    or could generate everything

- fix server shutdown routines (might be unsafe if exits are premature)
    - save world, 
    - proper cleanup / disposal of managers

- global naming refactor
    simplify names
    
    remove redundant names
        remove prefixes that are the same as their namespace
        
        ZDO::ZDO_member_map
              ^              
    move to a more standard naming convention
        either all underscores, or all pascalcase...
        
    make sure bitpack has full asserts and compiletime restricts
        it likes to complain

    store all usings from IZDOManager in ZDO

- planned optimizations to zdo:
    - ZDOID removals / full consilidation within ZDOManager
        zdos will no longer contain their own zdoid, somewhat better because
        the id in ZDOManager will no longer have a possibility of mismatching
        with its zdo
        
        as seen in 2 different branches which attempted to do exactly this, 
        the complications of removing ID() from zdo are insane
        
        the proposal for implementing this are as follows:
        
        a ZDO Data structure (ZDO_raw)
            holds data of zdo, little to no utility methods
        
        a ZDO wrapper (ZDO)
            holds the ZDO_raw& + id
            contains all methods originally within zdo
        
    - zdo.Owner VS zdo.zdoid.UserID
        these are essentially the same type, however their domain differs
        - zdo.Owner is limited to current peers
        - zdo.zdoid.UserID is limited to all peer sessions ever generated
            
    - store ZDO owner externally
        because not all zdos are owned (only a very select few)

- consider removing denotions and all hints until stable
    member hints are not stable (easy to forget to remove or add) 
    
    markers could be isolate numerical (separate pack indices instead of entire localdenotions)...

- reset member flag(s) when member extracted from ZDO
    also reset connectors
    
- might be able to shrink zdo connector value_type pair    
    type is a few bits (2 values are significant), 
    prefab target can be an index instead of 32-bit
