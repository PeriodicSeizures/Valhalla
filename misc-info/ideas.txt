# ideas
#   alternative low-priority todo list
#   includes mod ideas, extra features "feature-creep"

- using lua plugins incorrectly results in lingering zdos
    lua should never include this behavior
    
    prevent dangling ptrs unless unsafe mode allowed,
    
    unsafe mode is obviously *unsafe
        but would allow for otherwise more complex and possibly faster operations 
        
        ie luajit would be considered unsafe
        
    resources on games using lua 'unsafe' modes
        https://docs.dfhack.org/en/stable/docs/dev/Lua%20API.html
    
        https://noita.wiki.gg/wiki/Modding:_Lua_API#Unrestricted_API
        
        https://wofsauge.github.io/IsaacDocs/rep/tutorials/Using-Additional-Lua-Files.html?h=unsafe#workaround-for-require-problems       
       
        https://bindingofisaacrebirth.fandom.com/wiki/Launch_Options#--luadebug
        
        https://medium.com/expected-behavior/instrumentorio-custom-monitoring-for-factorio-or-anything-4c5d63fecdd0#8a95

        im not including roblox because mods are stored serverside anyways, 
            webrequests are a given...
            
    unsafe can be broken up into 2 categories:
        security vulnerabilities
            mostly to do with private data being transferred over network
        exploit vulnerabilities
            mostly to do with accessing dangling pointers
            crashes are most common with this
            
        hmmmmmm
    
- for each mod, create individual lua sandbox
    new state for each mod allows for discrete behaviour and cleanup
    
    broken mods can be easily cleaned up
    


- why are ~2 boss stones seperate from StartTemple LocationProxy?

- Devcommands appears to ignore ward restrictions?
    
    devcommands does ignore restrictions
    
    either that or valhalla/server is conflicting    
        
- Mod to prevent repairs when non-warded player damages Piece

- server-side player inventories and metering
    player defaultingly spawns in with nothing (except for rag cloth)
    
    if player is new, treat inventory as empty
    
    only definite way to add/remove items from inventory:
        - ItemDrop::Pickup (causes zdo erase)
        - ItemDrop::Drop (causes zdo instantiate)
        - Inventory::MoveItemToThisContainer -> Container::OnContainerChanged triggers a ZDO save
        - Crafting (a bit is unknown about this on client side, no way to validate?)

- leviathans sinking when leaving area
    probably something to do with server needing to do something with them
    
    possible ideas:
        if leviathan not at y=0 prior to peer leaving, consider setting height to 40 or something to prevent peer from fucking up everything
        
        hopefully this causes peer to only lower the leviathan down towards the surface instead of down to bedrock

- fix dungeon netview orientations
    some netviews in DG_Cave (crystal in this small corrider) and the roots when entering crypt are either floating or in the way. 
    
    seemingly another root in a different crypt is fine... (i think it has to do with not applying correct rotations) I bet this is the issue because crypt mud piles are misaligned in a room (too much to the side in start room)
    
- legal zdo spawning / tracking (illegal item / object spawning mitigation)
    basically prevent players from spawning the un-grabbable draugr axe etc...
    these weird items exist so that npc / characters are able to display them and use stats due to the way the game was made. The player however is not allowed to use them for obvious reasons. Will gid deeper to find what makes the player able to pick up or unable to pickup certain items, and will use that to base the legal item filter against
    
    can easily implement zdo searcher to see who spawns in certain zdos, who modified which zdos at whichever time, maybe even a replay tool? would be interesting, kinda reminds me of using wireshark to log packets. Basically replay the client conversation to the server visa-versa.
    
- boat-lagg fix 
    when a player (owner) temporarily stops sending packets, the boat will be much ahead, causing other players to be in the previous position.
    a possible idea would be to identify any instantaneous change in position, not impulse or integral velocity (since position in this sense is a simple sudden change due to lagg spike)
    
    could try resetting player-owner, setting position, then setting owner back (hmm, must experiment because this abuses the particular code of ZSyncTransform--- I am not sure how the client might respond to this). This must be carried out over several frames, not all at once...
    
    Player.Teleport does work, but it is a whole slow sequence. It does not actually teleport the player instantaneously because it is meant for slow loading areas from long distance portal travels. The above ZSyncTransform idea is the best bet at something to tp the player instantaneousy, but possibly finicky and buggy. must test...
    

- ZDO restore / reconciliation to prevent illegal modification by malicious clients
    
- ZDO based item assign 
    Container::RPC_TakeAllRespons
        appears to insert all items in inventory to local player
    - Player death causes entire inventory to be moved to tombstone
        this is clientside, as usual
    - detect events via incoming updated zdos

- fix mistlands mist distribution
    literally a blanket
    possibly vegetation mask broken?
    is vegetation being correctly skipped or placed as needed?
    
- calc server memory consumption
    zdos primarily...
    estimated based on sizeof(ZDO) and number of zdos
        not entirely accurate because zdos themselves allocate memory,
   
- vegetation pkg values might need tweaking
    swamp trees are kinda not distributed?
    
- block WNT packets?
    cause particles to spawn on screen likely causing lagg if many 

- send zdos more/less often/more depending on network load and per-client latency

- use bitshift for Biome type (instead of mask)

- modify RouteManager to not have so much peer indirection
    (stop with ints...)

- option for setting zone area distance in config
    
- idea for unloading/destroying/reconciliating inactive zdos in world:
    - if zdo is a once-visited type (rock, trees, basically exploratory), and hardly ever visited, could unload to disk if necessary for memory...