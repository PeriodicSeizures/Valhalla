todo:
    - fix zdos on save:
        chests Resetting
        Terrain Resetting
        Rocks Resetting
        Wards disabling
        Signs Resetting
        Fermenter Resetting
        Beds Resetting
        - determine the underlying cause for this
        - why does loading a valid world world, but saving->loading a world breaks things? there must be something that the original server does on save per zdo object
   
    - trying to get a way to represent zdo-components (members) without convoluting everything
        - each gameobject has only 1 zdo, therefore each zdo can refer to 1 gameobject, along with its properties (or more statically, its prefab capabilities):
        - whether the object is a:
            - Piece (Buildable/Placeable by player)
            - ItemDrop (Dropped Ground Item)
            - CraftingStation
            - WearNTear (Structural support / durability)
            - Pickable (Seasoning vegetation / goblin totem poles / Respawnable stuff)
            - DropOnDestroyed (destroyed objects drop)
            - CharacterDrop (killed entities drop)
            - Humanoid
            - MonsterAI
   
    - fix server shutdown routines
        - has hardly been worked on in months, very outdated and maybe unsafe or unimplemented, ie. 
            - save world, 
            - proper cleanup / disposal of managers
   
    - the below priority will require NetView method capture, abstraction and high performance code will be c++, with the extensions and behaviour in lua.
    
    - ZDO restore / reconciliation to prevent illegal modification by malicious clients
        
    - ZDO based item assign 
        Container::RPC_TakeAllRespons
            appears to insert all items in inventory to local player
        - Player death causes entire inventory to be moved to tombstone
            this is clientside, as usual
        - detect events via incoming updated zdos
    
    - fix mistlands mist distribution
        literally a blanket
        possibly vegetation mask broken?
        is vegetation being correctly skipped or placed as needed?

    - cleanup used heightmaps after time
        or could generate everything
          
    - calc server memory consumption
        zdos primarily...
        estimated based on sizeof(ZDO) and number of zdos
            not entirely accurate because zdos themselves allocate memory,
       
    - vegetation pkg values might need tweaking
        swamp trees are kinda not distributed?
        
    - block WNT packets?
        cause particles to spawn on screen likely causing lagg if many 
    
    - send zdos more/less often/more depending on network load and per-client latency
    
    - use bitshift for Biome type (instead of mask)

    - modify RouteManager to not have so much peer indirection
        (stop with ints...)
    
    - option for setting zone area distance in config
        
    - optimize zdo padding more?
        experiment with member offsets...
        masks for bool types
        
    - idea for unloading/destroying/reconciliating inactive zdos in world:
        - if zdo is a once-visited type (rock, trees, basically exploratory), and hardly ever visited, could unload to disk if necessary for memory...
        
finished:
    - consolidate all player notification messages into one method
        single useful Message(msg, type)

    - mod event error handler
        mod callback disabled if any error

    - fix log file backups
        compressed to /logs

    - test whether players work right near edge of world, or zdos...
        vegetation is not placed near edge of world, this might be why
        
        instead of square zone checks, check radially (within bounds of circular world)
        
    - test reducing world size to 313
        also add constraints when near edge of world
        so index bounds issues wont happen

    - implement quaternion euler fully
    
    - implement quaternion lookdirection fully
        so that prefabs are rotated correctly on worldgen
        broken in cases where an axis is zero or near zero

    - implement portals
        portals now link together with the help of a lua mod 
        
    - mods?
        comfy compress mod implemented

    - have method to get normal vector of heightmap at position
        consider using 4-pt normal for more acc normals if simple and fast enough
        
        but simple 2-pt normals work fine

    - world saving apparently broken (loading however is fully supported)
        was skipping utf-8 that had 3 total encoded byte sizes instead of the expected 2 -> 3 bytes

    - high priority: add full utf-8 char encoding and decoding for full Valheim c# compat
        current asystem is lazy and will only work with single bytes up to count 127, beyond that is special encoding...

    - restructure netpackage 
        - rename + make underlying stream use a ptr vec...
        - stream in many cases should be read only, like reading data incrementally, without copying when sub packages need making

    - prevent players spaces or non-ascii from joining
        or just invalid names
        or normalize the name (condense code points, dont just remove)

    - tweak vegetation rocks overlap radius
        perhaps too large, because black forest looks somewhat sparse compared to normal
    
    - work on vegetation overlap prevention

    - add option to immediately allow once-passworded users whove joined before
    - print a message to player on login whether auto logged in
        yes
    
    - locations appear to be offset by 1/2 of their width (along 1 axis), probably due to the way unity derives the final object position from instantiations in accordance with scale
    
    - check if ban command sends spaces
        it only sends the first split text...
        
    - try using Heightmap:: Biome and BiomeArea methods again, instead of geo (might be causing post-smoothing biome problems)
        it seems to have worked!